---
import Cursor from "../components/Cursor.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";

export interface Props {
  title: string;
  description: string;
}

const { title, description } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <Cursor />
    <Header />
    <slot />
    <Footer />
  </body>
</html>

<style is:global lang="scss">
  @use "../styles/media-queries" as *;
  @import url("https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap");

  :root {
    --background-color: hsl(300, 15%, 80%);
    --color: hsl(220, 5%, 10%);

    --base-font-size: 1.5rem;
    --font-size-extra-small: calc(var(--base-font-size) * 0.5);
    --font-size-small: calc(var(--base-font-size) * 0.75);
    --font-size-medium: calc(var(--base-font-size) * 1);
    --font-size-large: calc(var(--base-font-size) * 1.25);
    --font-size-extra-large: calc(var(--base-font-size) * 1.5);

    --base-gap: 1rem;
    --gap-extra-small: calc(var(--base-gap) * 0.5);
    --gap-small: calc(var(--base-gap) * 1);
    --gap-medium: calc(var(--base-gap) * 1.5);
    --gap-large: calc(var(--base-gap) * 2);
    --gap-extra-large: calc(var(--base-gap) * 2.5);

    --animation-duration: 1.5s;
    --animation-timing-function: ease;

    --header-height: 64px;
  }

  *,
  *::before,
  *::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: "Roboto", sans-serif;

    transition-property: color, background-color;
    transition-duration: 500ms;
    animation-timing-function: var(--animation-timing-function);

    background-color: var(--background-color);
    color: var(--color);
  }

  .dark-mode {
    background-color: var(--color);
    color: var(--background-color);
  }

  .light-mode {
    background-color: var(--background-color);
    color: var(--color);
  }

  header,
  section,
  footer,
  canvas {
    animation: fadeIn var(--animation-duration) var(--animation-timing-function);
  }

  a {
    color: currentColor;
    text-decoration: none;
  }

  button,
  a {
    outline: none;

    &:focus-visible {
      text-decoration: underline;
    }
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }

  @include mobile {
    :root {
      --base-font-size: 1.25rem;
      --base-gap: 0.5rem;
    }
  }

  @media (prefers-color-scheme: dark) {
    body {
      background-color: var(--color);
      color: var(--background-color);
    }
  }

  @media (prefers-color-scheme: light) {
    body {
      background-color: var(--background-color);
      color: var(--color);
    }
  }

  ::selection {
    background-color: var(--color);
    color: var(--background-color);
  }

  ::-webkit-scrollbar {
    width: 5px;
  }

  ::-webkit-scrollbar-track {
    background: transparent;
    border-left: 1px solid currentColor;
  }

  ::-webkit-scrollbar-thumb {
    background: currentColor;
  }
</style>

<script
  data-host="https://microanalytics.io"
  data-dnt="false"
  src="https://microanalytics.io/js/script.js"
  id="ZwSg9rf6GA"
  async
  defer
></script>
